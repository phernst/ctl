#ifndef CTL_META_CTL_H
#define CTL_META_CTL_H

/*
 * This header includes all headers of the CTL main module
 * provided that all submodules are included in the qmake project, usually by including
 * the CTL main module 'ctl.pri'.
 * Otherwise, only the headers of the added submodules will be included.
 */

#ifdef CTL_CORE_MODULE_AVAILABLE
#include "acquisition/abstractpreparestep.h"
#include "acquisition/acquisitionsetup.h"
#include "acquisition/ctsystem.h"
#include "acquisition/ctsystembuilder.h"
#include "acquisition/geometrydecoder.h"
#include "acquisition/geometryencoder.h"
#include "acquisition/preparationprotocols.h"
#include "acquisition/preparesteps.h"
#include "acquisition/radiationencoder.h"
#include "acquisition/simplectsystem.h"
#include "acquisition/systemblueprints.h"
#include "acquisition/trajectories.h"
#include "acquisition/viewgeometry.h"
#include "components/abstractbeammodifier.h"
#include "components/abstractdetector.h"
#include "components/abstractgantry.h"
#include "components/abstractsource.h"
#include "components/allcomponents.h"
#include "components/allgenerictypes.h"
#include "components/attenuationfilter.h"
#include "components/carmgantry.h"
#include "components/cylindricaldetector.h"
#include "components/flatpaneldetector.h"
#include "components/genericbeammodifier.h"
#include "components/genericdetector.h"
#include "components/genericgantry.h"
#include "components/genericsource.h"
#include "components/systemcomponent.h"
#include "components/tubulargantry.h"
#include "components/xraylaser.h"
#include "components/xraytube.h"
#include "img/abstractdynamicvolumedata.h"
#include "img/basisfunctionvolume.h"
#include "img/chunk2d.h"
#include "img/compositevolume.h"
#include "img/lineardynamicvolume.h"
#include "img/modulelayout.h"
#include "img/projectiondata.h"
#include "img/singleviewdata.h"
#include "img/spectralvolumedata.h"
#include "img/trivialdynamicvolume.h"
#include "img/voxelvolume.h"
#include "io/abstractbasetypeio.h"
#include "io/abstractserializer.h"
#include "io/basetypeio.h"
#include "io/binaryserializer.h"
#include "io/ctldatabase.h"
#include "io/jsonserializer.h"
#include "io/messagehandler.h"
#include "io/metainfokeys.h"
#include "io/serializationhelper.h"
#include "io/serializationinterface.h"
#include "mat/homography.h"
#include "mat/mat.h"
#include "mat/matrix_algorithm.h"
#include "mat/matrix_types.h"
#include "mat/matrix_utils.h"
#include "mat/pi.h"
#include "mat/pmatcomparator.h"
#include "mat/projectionmatrix.h"
#include "models/abstractdatamodel.h"
#include "models/abstractxrayspectrummodel.h"
#include "models/datamodeloperations.h"
#include "models/detectorsaturationmodels.h"
#include "models/intervaldataseries.h"
#include "models/pointseriesbase.h"
#include "models/stepfunctionmodels.h"
#include "models/tabulateddatamodel.h"
#include "models/xrayspectrummodels.h"
#include "models/xydataseries.h"
#include "processing/abstractvolumedecomposer.h"
#include "processing/diff.h"
#include "processing/errormetrics.h"
#include "processing/filter.h"
#include "processing/imageprocessing.h"
#include "processing/modelbasedvolumedecomposer.h"
#include "processing/threadpool.h"
#include "projectors/abstractprojector.h"
#include "projectors/arealfocalspotextension.h"
#include "projectors/detectorsaturationextension.h"
#include "projectors/dynamicprojectorextension.h"
#include "projectors/poissonnoiseextension.h"
#include "projectors/projectionpipeline.h"
#include "projectors/projectorextension.h"
#include "projectors/raycasterprojectorcpu.h"
#include "projectors/spectraleffectsextension.h"
// Qt-free
#include "mat/deg.h"
#include "mat/matrix.h"
#include "models/copyableuniqueptr.h"
#include "processing/coordinates.h"
#endif // CTL_CORE_MODULE_AVAILABLE

#ifdef DEN_FILE_IO_MODULE_AVAILABLE
#include "io/den/den.h"
#include "io/den/den_header.h"
#include "io/den/den_tpl_deduct.h"
#include "io/den/den_utils.h"
#include "io/den/denfileio.h"
#include "io/den/dfileformat.h"
#endif // DEN_FILE_IO_MODULE_AVAILABLE

#ifdef NRRD_FILE_IO_MODULE_AVAILABLE
#include "io/nrrd/nrrdfileio.h"
#endif // NRRD_FILE_IO_MODULE_AVAILABLE

#endif // CTL_META_CTL_H
